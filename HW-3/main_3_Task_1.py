# ### **Задача №1.1. `Wizard` (Волшебник)**
#
# Создайте класс **`Wizard`** для моделирования волшебника в Хогвартсе. В классе **`Wizard`** задаются приватные поля:
# имя волшебника,
# факультет,
# уровень магической силы,
# список известных заклинаний (список объектов класса **`Spell`**),
# текущий статус (в Хогвартсе или выпущен).
#
# Все поля должны быть приватными. Реализуйте следующие методы:
#
# 1. **Конструктор**: инициализация полей объекта.
# 2. **Геттеры**: методы для получения значений каждого приватного поля.
#     - **`get_name()`**: возвращает имя волшебника.
#     - **`get_house()`**: возвращает факультет волшебника.
#     - **`get_magic_level()`**: возвращает уровень магической силы волшебника.
#     - **`get_spells()`**: возвращает список известных заклинаний волшебника.
#     - **`get_status()`**: возвращает текущий статус волшебника.
# 3. **Сеттеры**: методы для изменения значений каждого приватного поля.
#     - **`set_house(house: str)`**: устанавливает факультет волшебника.
#     - **`set_magic_level(magic_level: int)`**: устанавливает уровень магической силы волшебника (не должен быть отрицательным).
#     - **`set_status(status: str)`**: устанавливает текущий статус волшебника.
# 4. **Другие методы**:
#     - **`add_spell(spell: Spell)`**: добавляет заклинание в список известных.
#     - **`remove_spell(spell: Spell)`**: удаляет заклинание из списка известных.
#     - **`increase_magic_level(amount: int)`**: увеличивает уровень магической силы на заданное значение (неотрицательное).
#     - **`__str__()`**: возвращает строку, аккумулирующую состояние всех полей объекта.
