import math
### **Задача №7.**

# Разработайте класс **`GeometryUtils`**, который будет содержать статические методы для работы с геометрическими фигурами. Класс должен предоставлять функциональность для расчёта площади и периметра различных фигур, таких как круги, прямоугольники и треугольники. Эти методы будут полезны в различных ситуациях, где требуется математический расчет геометрических параметров, и должны быть легко доступны без необходимости создания экземпляра класса.
# # Операции класса:
# # 1. **Статический метод для расчёта площади круга:**
#     - Входные данные: радиус круга.
#     - Выходные данные: площадь круга.
#     - Формула: `*π*×радиус^2`.
# 2. **Статический метод для расчёта периметра круга:**
#     - Входные данные: радиус круга.
#     - Выходные данные: периметр круга.
#     - Формула: `2*π*×радиус`.
# 3. **Статический метод для расчёта площади прямоугольника:**
#     - Входные данные: длина и ширина прямоугольника.
#     - Выходные данные: площадь прямоугольника.
#     - Формула: `длина × ширина`.
# 4. **Статический метод для расчёта периметра прямоугольника:**
#     - Входные данные: длина и ширина прямоугольника.
#     - Выходные данные: периметр прямоугольника.
#     - Формула: `2×(длина+ширина)`.
# 5. **Статический метод для расчёта площади треугольника по формуле Герона:**
#     - Входные данные: длины трёх сторон треугольника.
#     - Выходные данные: площадь треугольника.
#     - Формула: используйте полупериметр и длины сторон для вычисления по формуле Герона.

class GeometryUtils:

    @staticmethod
    def square_cirkle(radius):
        S = math.pi * radius**2
        return S

    @staticmethod
    def perim_cirkle(radius):
        P = 2 * math.pi * radius
        return P

    @staticmethod
    def square_rectangle(lenght, width):
        S = lenght * width
        return S

    @staticmethod
    def perim_rectangle(lenght, width):
        P = 2 *(lenght + width)
        return P

    @staticmethod
    def square_triangle_ger(a1, a2, a3):
        p = (a1 + a2 + a3) / 2
        S = math.sqrt(p * (p - a1)*(p - a2)*(p - a3))
        return S

print(GeometryUtils.square_cirkle(5))
print(GeometryUtils.perim_cirkle(5))
print(GeometryUtils.square_rectangle(5,8))
print(GeometryUtils.perim_rectangle(5,8))
print(GeometryUtils.square_triangle_ger(5,8,10))

